/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VictoryScreenRouteImport } from './routes/victoryScreen'
import { Route as ShopRouteImport } from './routes/shop'
import { Route as NormalBattleRouteImport } from './routes/normalBattle'
import { Route as GameOverScreenRouteImport } from './routes/gameOverScreen'
import { Route as BossBattleRouteImport } from './routes/bossBattle'
import { Route as IndexRouteImport } from './routes/index'

const VictoryScreenRoute = VictoryScreenRouteImport.update({
  id: '/victoryScreen',
  path: '/victoryScreen',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopRoute = ShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRouteImport,
} as any)
const NormalBattleRoute = NormalBattleRouteImport.update({
  id: '/normalBattle',
  path: '/normalBattle',
  getParentRoute: () => rootRouteImport,
} as any)
const GameOverScreenRoute = GameOverScreenRouteImport.update({
  id: '/gameOverScreen',
  path: '/gameOverScreen',
  getParentRoute: () => rootRouteImport,
} as any)
const BossBattleRoute = BossBattleRouteImport.update({
  id: '/bossBattle',
  path: '/bossBattle',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bossBattle': typeof BossBattleRoute
  '/gameOverScreen': typeof GameOverScreenRoute
  '/normalBattle': typeof NormalBattleRoute
  '/shop': typeof ShopRoute
  '/victoryScreen': typeof VictoryScreenRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bossBattle': typeof BossBattleRoute
  '/gameOverScreen': typeof GameOverScreenRoute
  '/normalBattle': typeof NormalBattleRoute
  '/shop': typeof ShopRoute
  '/victoryScreen': typeof VictoryScreenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/bossBattle': typeof BossBattleRoute
  '/gameOverScreen': typeof GameOverScreenRoute
  '/normalBattle': typeof NormalBattleRoute
  '/shop': typeof ShopRoute
  '/victoryScreen': typeof VictoryScreenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bossBattle'
    | '/gameOverScreen'
    | '/normalBattle'
    | '/shop'
    | '/victoryScreen'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bossBattle'
    | '/gameOverScreen'
    | '/normalBattle'
    | '/shop'
    | '/victoryScreen'
  id:
    | '__root__'
    | '/'
    | '/bossBattle'
    | '/gameOverScreen'
    | '/normalBattle'
    | '/shop'
    | '/victoryScreen'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BossBattleRoute: typeof BossBattleRoute
  GameOverScreenRoute: typeof GameOverScreenRoute
  NormalBattleRoute: typeof NormalBattleRoute
  ShopRoute: typeof ShopRoute
  VictoryScreenRoute: typeof VictoryScreenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/victoryScreen': {
      id: '/victoryScreen'
      path: '/victoryScreen'
      fullPath: '/victoryScreen'
      preLoaderRoute: typeof VictoryScreenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/normalBattle': {
      id: '/normalBattle'
      path: '/normalBattle'
      fullPath: '/normalBattle'
      preLoaderRoute: typeof NormalBattleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gameOverScreen': {
      id: '/gameOverScreen'
      path: '/gameOverScreen'
      fullPath: '/gameOverScreen'
      preLoaderRoute: typeof GameOverScreenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bossBattle': {
      id: '/bossBattle'
      path: '/bossBattle'
      fullPath: '/bossBattle'
      preLoaderRoute: typeof BossBattleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BossBattleRoute: BossBattleRoute,
  GameOverScreenRoute: GameOverScreenRoute,
  NormalBattleRoute: NormalBattleRoute,
  ShopRoute: ShopRoute,
  VictoryScreenRoute: VictoryScreenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
